#############################################################################
# Makefile for building: r3v
# Generated by qmake (1.07a) (Qt 3.3.1) on: Thu Mar  3 17:51:03 2005
# Project:  r3v.pro
# Template: app
# Command: $(QMAKE) -o Makefile r3v.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -fPIC -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -fPIC -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -Wall -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/default -I. -I. -I/usr/include -I$(QTDIR)/include -I/usr/include -I/usr/X11R6/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib/ -L$(QTDIR)/lib/ -L/usr/lib/ -L/usr/X11R6/lib/ -lqt-mt -lGLU -lGL -lXmu -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = diamond.h \
		faketriangle.h \
		faketrianglelist.h \
		geopoint.h \
		glwidget.h \
		map.h \
		node.h \
		observer.h \
		parser.h \
		triangle.h
SOURCES = diamond.cpp \
		faketriangle.h \
		faketrianglelist.h \
		geopoint.cpp \
		glwidget.cpp \
		main.cpp \
		map.cpp \
		node.cpp \
		observer.cpp \
		parser.cpp \
		triangle.cpp
OBJECTS = diamond.o \
		faketriangle.o \
		faketrianglelist.o \
		geopoint.o \
		glwidget.o \
		main.o \
		map.o \
		node.o \
		observer.o \
		parser.o \
		triangle.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_glwidget.cpp
OBJMOC = moc_glwidget.o
DIST	   = r3v.pro
QMAKE_TARGET = r3v
DESTDIR  = 
TARGET   = r3v

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: r3v.pro  /usr/lib/qt3/mkspecs/default/qmake.conf /usr/lib/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile r3v.pro
qmake: 
	@$(QMAKE) -o Makefile r3v.pro

dist: 
	@mkdir -p .tmp/r3v && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/r3v/ && ( cd `dirname .tmp/r3v` && $(TAR) r3v.tar r3v && $(GZIP) r3v.tar ) && $(MOVE) `dirname .tmp/r3v`/r3v.tar.gz . && $(DEL_FILE) -r .tmp/r3v

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

diamond.o: diamond.cpp diamond.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

faketriangle.o: faketriangle.h 

faketrianglelist.o: faketrianglelist.h faketriangle.h

geopoint.o: geopoint.cpp geopoint.h

glwidget.o: glwidget.cpp diamond.h \
		glwidget.h \
		map.h \
		node.h \
		observer.h \
		parser.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

main.o: main.cpp diamond.h \
		glwidget.h \
		map.h \
		node.h \
		parser.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

map.o: map.cpp diamond.h \
		map.h \
		node.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

node.o: node.cpp node.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

observer.o: observer.cpp observer.h

parser.o: parser.cpp geopoint.h \
		parser.h \
		map.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

triangle.o: triangle.cpp map.h \
		node.h \
		triangle.h \
		faketrianglelist.h \
		faketriangle.h

moc_glwidget.o: moc_glwidget.cpp  glwidget.h faketrianglelist.h \
		faketriangle.h

moc_glwidget.cpp: $(MOC) glwidget.h
	$(MOC) glwidget.h -o moc_glwidget.cpp

####### Install

install:  

uninstall:  

